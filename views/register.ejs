<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Registro - ReavalieEAD</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body class="bg-gray-100 font-sans flex items-center justify-center min-h-screen">
  <%- include('partials/header', { username: username }) %> <%# Incluído o header %>

  <div class="max-w-md w-full bg-white p-8 rounded-lg shadow-lg">
    <h1 class="text-3xl font-bold text-red-600 mb-6 text-center">Registrar Nova Conta</h1>

    <% if (message) { %>
      <div class="<% if (isError) { %>bg-red-100 border border-red-400 text-red-700<% } else { %>bg-blue-100 border border-blue-400 text-blue-700<% } %> px-4 py-3 rounded relative mb-4" role="alert">
        <span class="block sm:inline"><%= message %></span>
      </div>
    <% } %>

    <form method="POST" action="/register" class="space-y-4">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700">Nome Completo:</label>
        <input type="text" id="name" name="name" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2">
      </div>
      <div>
        <label for="username" class="block text-sm font-medium text-gray-700">Email (será seu usuário):</label>
        <input type="email" id="username" name="username" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2">
      </div>
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700">Senha:</label>
        <input type="password" id="password" name="password" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2">
      </div>
      <div>
        <label for="ra" class="block text-sm font-medium text-gray-700">R.A. (Registro Acadêmico) <span class="text-gray-500">(Opcional)</span>:</label>
        <input type="text" id="ra" name="ra" class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2" placeholder="Ex: 1234567">
      </div>

      <!-- Cascading Selects for Institution -->
      <div>
        <label for="instituicao_tipo" class="block text-sm font-medium text-gray-700">Tipo de Instituição:</label>
        <select id="instituicao_tipo" name="instituicao_tipo" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2">
          <option value="">Selecione o Tipo</option>
          <option value="Publica">Pública</option>
          <option value="Privada">Privada</option>
        </select>
      </div>
      <div>
        <label for="instituicao_id" class="block text-sm font-medium text-gray-700">Instituição de Ensino:</label>
        <select id="instituicao_id" name="instituicao_id" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2" disabled>
          <option value="">Selecione o Tipo Primeiro</option>
        </select>
      </div>

      <!-- Cascading Selects for Course -->
      <div>
        <label for="curso_area" class="block text-sm font-medium text-gray-700">Área do Curso:</label>
        <select id="curso_area" name="curso_area" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2">
          <option value="">Selecione a Área</option>
          <option value="Saude">Saúde</option>
          <option value="Humanas">Humanas</option>
          <option value="Tecnologia">Tecnologia</option>
          <option value="Exatas">Exatas</option>
          <option value="Biologica">Biológica</option>
          <option value="Outra">Outra</option>
        </select>
      </div>
      <div>
        <label for="curso_id" class="block text-sm font-medium text-gray-700">Nome do Curso:</label>
        <select id="curso_id" name="curso_id" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2" disabled>
          <option value="">Selecione a Área Primeiro</option>
        </select>
      </div>

      <div>
        <label for="state" class="block text-sm font-medium text-gray-700">Estado:</label>
        <select id="state" name="state" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2">
          <option value="">Selecione o Estado</option>
          <% states.forEach(function(s) { %>
            <option value="<%= s %>"><%= s %></option>
          <% }); %>
        </select>
      </div>
      <div>
        <label for="city" class="block text-sm font-medium text-gray-700">Cidade (Polo):</label>
        <select id="city" name="city" required class="mt-1 block w-full border border-gray-300 rounded-md px-4 py-2" disabled>
          <option value="">Selecione o Estado Primeiro</option>
        </select>
      </div>

      <button type="submit" class="w-full bg-red-600 text-white px-6 py-2 rounded-md hover:bg-red-700 font-semibold">Registrar</button>
    </form>
    <p class="text-center text-sm text-gray-600 mt-4">Já tem uma conta? <a href="/login" class="text-red-600 hover:underline">Faça login aqui</a></p>
  </div>

  <script>
    const instituicaoTipoSelect = document.getElementById('instituicao_tipo');
    const instituicaoSelect = document.getElementById('instituicao_id');
    const cursoAreaSelect = document.getElementById('curso_area');
    const cursoSelect = document.getElementById('curso_id');
    const stateSelect = document.getElementById('state');
    const citySelect = document.getElementById('city');

    const allInstituicoes = <%- JSON.stringify(instituicoes) %>;
    const allCursos = <%- JSON.stringify(cursos) %>;
    const citiesByState = <%- citiesByState %>; // Parsed from JSON string

    // Populate Institutions based on Type
    instituicaoTipoSelect.addEventListener('change', () => {
        const selectedType = instituicaoTipoSelect.value;
        instituicaoSelect.innerHTML = '<option value="">Selecione a Instituição</option>';
        instituicaoSelect.disabled = true;

        if (selectedType) {
            const filteredInstituicoes = allInstituicoes.filter(inst => inst.tipo === selectedType);
            filteredInstituicoes.forEach(inst => {
                const option = document.createElement('option');
                option.value = inst.id;
                option.textContent = inst.nome;
                instituicaoSelect.appendChild(option);
            });
            instituicaoSelect.disabled = false;
        }
        // Não resetar seleção de curso/área ao mudar tipo de instituição, são independentes no registro de usuário
    });

    // Populate Courses based on Area
    cursoAreaSelect.addEventListener('change', () => {
        const selectedArea = cursoAreaSelect.value;
        cursoSelect.innerHTML = '<option value="">Selecione o Curso</option>';
        cursoSelect.disabled = true;

        if (selectedArea) {
            const filteredCursos = allCursos.filter(cur => cur.area === selectedArea);
            filteredCursos.forEach(cur => {
                const option = document.createElement('option');
                option.value = cur.id;
                option.textContent = cur.nome;
                cursoSelect.appendChild(option);
            });
            cursoSelect.disabled = false;
        }
    });

    // Populate Cities based on State
    stateSelect.addEventListener('change', () => {
        const selectedState = stateSelect.value;
        citySelect.innerHTML = '<option value="">Selecione a Cidade</option>';
        citySelect.disabled = true;

        if (selectedState && citiesByState[selectedState]) {
            citiesByState[selectedState].forEach(city => {
                const option = document.createElement('option');
                option.value = city;
                option.textContent = city;
                citySelect.appendChild(option);
            });
            citySelect.disabled = false;
        }
    });

    // Initial disable states for selects
    instituicaoSelect.disabled = true;
    cursoSelect.disabled = true;
    citySelect.disabled = true;
  </script>
</body>
</html>