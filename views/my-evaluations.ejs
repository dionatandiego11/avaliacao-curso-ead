<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Minhas Avaliações - ReavalieEAD</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body class="bg-gray-100 font-sans">

  <%- include('partials/header', { username: username }) %>

  <div class="max-w-5xl mx-auto py-10 px-6">
    <h1 class="text-3xl font-bold text-red-600 mb-8 text-center">Minhas Avaliações</h1>

    <% if (message) { %>
      <div class="bg-<%= isError ? 'red' : 'green' %>-100 border-<%= isError ? 'red' : 'green' %>-400 text-<%= isError ? 'red' : 'green' %>-700 px-4 py-3 rounded relative mb-4" role="alert">
        <span class="block sm:inline"><%= message %></span>
      </div>
    <% } %>

    <section class="bg-white p-6 rounded shadow">
      <h2 class="text-xl font-semibold mb-4">Suas Avaliações Cadastradas</h2>
      <div id="avaliacoes-list" class="space-y-4">
        <p class="text-gray-600">Carregando avaliações...</p>
      </div>
      <p class="text-center mt-6">
          <a href="/avaliar" class="bg-red-600 hover:bg-red-700 text-white font-semibold px-6 py-3 rounded-md shadow inline-block">
            Fazer Nova Avaliação
          </a>
      </p>
    </section>

  </div>

  <script>
    async function fetchMyEvaluations() {
      try {
        const response = await fetch('/api/my-evaluations');
        if (!response.ok) {
          throw new Error('Erro ao carregar suas avaliações.');
        }
        const avaliacoes = await response.json();
        const avaliacoesList = document.getElementById('avaliacoes-list');
        avaliacoesList.innerHTML = ''; // Limpa o conteúdo

        if (avaliacoes.length === 0) {
          avaliacoesList.innerHTML = '<p class="text-gray-600">Você ainda não possui avaliações cadastradas.</p>';
          return;
        }

        avaliacoes.forEach(av => {
          const li = document.createElement('li');
          li.className = 'bg-gray-50 p-4 rounded-md shadow-sm';
          li.innerHTML = `
            <p class="text-sm text-gray-700">
                <strong>RA:</strong> ${av.ra || 'N/A'} |
                <strong>Inst:</strong> ${av.instituicao_nome || 'N/A'} |
                <strong>Curso:</strong> ${av.curso_nome || 'N/A'} |
                <strong>Data:</strong> ${av.data_formatada}
            </p>
            <p class="text-sm text-gray-700 mt-2">
                <strong>Notas:</strong>
                Conteúdo: ${av.conteudo},
                Professores: ${av.professores},
                Apoio: ${av.apoio},
                Estrutura: ${av.estrutura},
                Material: ${av.material},
                Experiência: ${av.experiencia}
            </p>
            <p class="text-sm text-gray-700 mt-2">
                <strong>Comentário:</strong> ${av.comentario || 'Nenhum'}
            </p>
            <div class="flex justify-end space-x-2 mt-3">
              <button class="bg-yellow-500 text-white text-sm px-3 py-1 rounded hover:bg-yellow-600" onclick="editEvaluation(${av.id})">Editar</button>
              <button class="bg-red-500 text-white text-sm px-3 py-1 rounded hover:bg-red-600" onclick="deleteEvaluation(${av.id})">Remover</button>
            </div>
          `;
          avaliacoesList.appendChild(li);
        });
      } catch (error) {
        console.error('Erro ao carregar avaliações:', error);
        document.getElementById('avaliacoes-list').innerHTML = '<p class="text-red-600">Ocorreu um erro ao carregar suas avaliações.</p>';
      }
    }

    async function editEvaluation(id) {
        // Redireciona para a página de avaliação com o ID para pré-preenchimento
        window.location.href = `/avaliar?edit_id=${id}`;
    }

    async function deleteEvaluation(id) {
      if (confirm('Tem certeza que deseja remover esta avaliação?')) {
        try {
          const response = await fetch(`/api/avaliacoes/${id}`, {
            method: 'DELETE'
          });
          const data = await response.json(); // Tenta ler JSON para mensagens de erro/sucesso

          if (response.ok) {
            // Se a exclusão foi bem-sucedida (status 200), recarrega a lista com mensagem
            window.location.href = `/my-evaluations?message=${encodeURIComponent(data.message || 'Avaliação removida com sucesso!')}`;
          } else {
            // Se houve erro (e.g., 404), exibe a mensagem de erro da API
            window.location.href = `/my-evaluations?message=${encodeURIComponent(data.message || 'Erro ao remover avaliação.')}&error=true`;
          }
        } catch (error) {
          console.error('Erro ao deletar:', error);
          window.location.href = `/my-evaluations?message=${encodeURIComponent('Erro de conexão ao remover avaliação.')}&error=true`;
        }
      }
    }

    // Chama a função para carregar as avaliações quando a página carregar
    document.addEventListener('DOMContentLoaded', fetchMyEvaluations);
  </script>
</body>
</html>